import { shopifyClient } from '../../lib/shopify';
import Head from "next/head";
import Image from 'next/image';
import type { GetServerSideProps } from 'next';

type Product = {
  product: {
    featuredImage: { url: string };
    title: string;
    description: string;
    priceRange: { maxVariantPrice: { amount: GLfloat } };
  },
};

export default function ProductPage({ product }: Product) {
  return (
    <>
      <Head>
        <title>Create T3 App - Product Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <Image
          src={`${product.featuredImage.url}`}
          alt={product.title}
          loading="lazy"
          width={500}
          height={500}
        />
        <h1 className="text-5xl font-extrabold leading-normal text-gray-700 md:text-[5rem]">
          {product.title}
        </h1>
        <p className="text-2xl text-gray-700">$ {product.priceRange.maxVariantPrice.amount}</p>
        <p className="text-2xl text-gray-700">{product.description}</p>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) =>  {
  const { handle } = context.query

  type Product = {
    body: { data: { product : object } };
  };

  const product: Product = await shopifyClient.query({
    data: `{
      product(handle: "${handle}") {
        id
        title
        description
        featuredImage {
          url
        }
        priceRange {
          maxVariantPrice {
            amount
          }
        }
      }
    }`,
  });

  return {
   props: {
    product: product.body.data.product
  },
 };
};
